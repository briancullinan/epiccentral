@using System.Text.RegularExpressions
@using ViewRes
@model KeyValuePair<string, AE.Net.Mail.MailMessage>

<div class="message-heading">
	<div class="display-label">@Support.Message_Sender</div>
    <div class="display-field">@SharedRes.Formats.MailAddress.FormatWith(Model.Value.From)</div>
	<div class="display-label">@Support.Message_Subject</div>
    <div class="display-field">@Model.Value.Subject</div>
	<div class="display-label">@Support.Message_To</div>
    <div class="display-field">@String.Join("; ", Model.Value.To.Select(x => SharedRes.Formats.MailAddress.FormatWith(x)))</div>
    <a class="button" href="@Url.Action("Reply", "Support", new {replyUid = Model.Value.Uid, all = false, folder = Model.Key})">@Support.Message_Reply</a>
    <a class="button" href="@Url.Action("Reply", "Support", new { replyUid = Model.Value.Uid, all = true, folder = Model.Key })">@Support.Message_ReplyAll</a>
    <a class="button" href="@Url.Action("Reply", "Support", new { replyUid = Model.Value.Uid, folder = Model.Key })">@Support.Message_Forward</a>
</div>

@if(Model.Value.AlternateViews.Any(x => x.ContentType == "text/html"))
{
    <div class="message-body">
        @MvcHtmlString.Create(Regex.Replace(Model.Value.AlternateViews.First(x => x.ContentType == "text/html").Body, @"[\r\n]+(?=[^<>]*>)", ""))
    </div>
}
else
{
    <pre class="message-body" style="white-space: normal; white-space: pre-wrap; white-space: -moz-pre-wrap !important; word-wrap: break-word;">
        @Model.Value.Body
    </pre>
}

<br class="clear"/>
