<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InterIMAP</name>
    </assembly>
    <members>
        <member name="T:InterIMAP.Synchronous.ContentType">
            <summary>
            Simple enumeration to set the expected format of the messages content
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.ContentType.Text">
            <summary>
            a Plain/Text content section
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.ContentType.HTML">
            <summary>
            a Plain/HTML content section
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.ContentType.Unknown">
            <summary>
            An unknown content section
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPMessageContent">
            <summary>
            Container to store the differnt kinds of content that can be contained in a message
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPMessageContent.#ctor">
            <summary>
            Default constructor. need for serialization.
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageContent.ContentDescription">
            <summary>
            Description of message content. Sometimes contains attachment filename.
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageContent.MIMEVersion">
            <summary>
            The MIME-Version field
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageContent.ContentFilename">
            <summary>
            The filename of the embedded image or attachment
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageContent.ContentDisposition">
            <summary>
            Content-Disposition field. Used for embedded images and file attachments
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageContent.ContentId">
            <summary>
            The Content-Id field
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageContent.PartID">
            <summary>
            The section of the message this content came from
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageContent.TextData">
            <summary>
            Contains the textual data on this content section
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageContent.BinaryData">
            <summary>
            Contains the binary data of this content section. Only used for embedded images and attachments
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageContent.ContentType">
            <summary>
            Content type enumeration based on the string returned from the server
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageContent.ContentTransferEncoding">
            <summary>
            The Encoding method used for this content section
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageContent.ContentSize">
            <summary>
            The size of the content in bytes
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPMessage">
            <summary>
            Stores all data about a single e-mail message
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPMessage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPMessage.SetPropValue(System.String,System.Object)">
            <summary>
            Uses reflection to search for the specified property and set it to the specified value
            </summary>
            <param name="propName">Exact name of property to find</param>
            <param name="value">Value to assign to the property</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPMessage.MarkAsRead">
            <summary>
            Marks this message as \Seen on the server
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPMessage.RefreshData(System.Boolean,System.Boolean)">
            <summary>
            Manually reload the data for this message from the server.
            </summary>
            <param name="includeBody">Set to true to refresh the content</param>        
            <param name="force">Must to set to true if calling this method explicitly</param>        
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPMessage.GetXML">
            <summary>
            Generates an XML structure representing this message
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPMessage.ToString">
            <summary>
            Simple override to display to the message UID
            </summary>
            <returns></returns>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.AttachmentsAvailable">
            <summary>
            Flag to indicate whether the attachments have been downloaded for this message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.BodyParts">
            <summary>
            Collection of content parts based on the body structure
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.ReceivedSPF">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.ContentTransferEncoding">
            <summary>
            The encoding method of the message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.DeliveredTo">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.XGmailReceived">
            <summary>
            Special data used by Gmail
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.Organization">
            <summary>
            The organization the message came from
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.Flags">
            <summary>
            Collection of flags for this message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.Folder">
            <summary>
            Reference to the foler this message is located in.
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.InReplyTo">
            <summary>
            The In-Reply-To field of the message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.XOriginatingIP">
            <summary>
            The IP of the source of the message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.Uid">
            <summary>
            The main ID used by the IMAP server to indetify a message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.Received">
            <summary>
            List of servers that this message traveled through
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.MimeVersion">
            <summary>
            Version of the MIME specification being used
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.ContentType">
            <summary>
            The main content type for this message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.ContentClass">
            <summary>
            The Content-class section of the message header
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.ReturnPath">
            <summary>
            Usually the same value as "From"
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.XMailer">
            <summary>
            Server Application used to send this message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.XMimeOLE">
            <summary>
            X-MimeOLE string from message header
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.XOriginalArrivalTime">
            <summary>
            Time message was received on the server (UTC)
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.Subject">
            <summary>
            The subject of the message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.Date">
            <summary>
            The date the message was received
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.MessageID">
            <summary>
            An internal ID for the message. Not to be confused with UID.
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.XMSTNEFCorrelator">
            <summary>
            I have no idea what this is for.
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.ThreadTopic">
            <summary>
            Same as the Subject
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.ThreadIndex">
            <summary>
            Insert something meaningful here
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.From">
            <summary>
            List of addresses this is message is from
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.To">
            <summary>
            List of people this message was sent to
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.Cc">
            <summary>
            List of people this message was copied to
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.Bcc">
            <summary>
            List of people this message blind copied to
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.TextData">
            <summary>
            The content of the message as plain text (if available)
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.HtmlData">
            <summary>
            The content of the message as HTML (if available)
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.Attachments">
            <summary>
            List of files that have been attached to this message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.Embedded">
            <summary>
            List of files that have been embedded inside this message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.HeaderLoaded">
            <summary>
            Flag to indicate if the header data for this message has been loaded
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessage.ContentLoaded">
            <summary>
            Flag to indicate if the content data for this message has been loaded
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPBase">
            <summary>
            Provides the basic connection management and server communication methods
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MSG_FLAG_SEEN">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MSG_FLAG_ANSWERED">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MSG_FLAG_FLAGGED">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MSG_FLAG_DRAFT">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MSG_FLAG_DELETED">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MAX_MSG_FLAGS">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_DEFAULT_PORT">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_DEFAULT_SSL_PORT">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_DEFAULT_TIMEOUT">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_COMMAND_PREFIX">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_UNTAGGED_RESPONSE_PREFIX">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_OK_RESPONSE">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_NO_RESPONSE">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_BAD_RESPONSE">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_BAD_SERVER_RESPONSE">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_OK_SERVER_RESPONSE">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_CAPABILITY_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_CONNECT_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_LOGIN_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_LOGOUT_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_SELECT_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_EXAMINE_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_APPEND_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_QUOTA_RESPONSE">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_GETQUOTA_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_LIST_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_LIST_RESPONSE">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_APPEND_RESPONSE_START">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_APPEND_RESPONSE_END">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_GO_AHEAD_RESPONSE">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_SEARCH_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_SEARCH_RESPONSE">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_UIDFETCH_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_FETCH_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_BODYSTRUCTURE_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_UIDSTORE_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_EXPUNGE_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_NOOP_COMMAND">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_COMMAND_EOL">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_NIL">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_HEADER_EOL">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_SIZE_START">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_SIZE_END">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_CONTENT_TYPE">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_RFC822">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_ID">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_MULTIPART">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_CONTENT_ENCODING">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_CONTENT_DESC">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_CONTENT_DISP">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_CONTENT_SIZE">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_CONTENT_LINES">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MESSAGE_BASE64_ENCODING">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_MSG_DEFAULT_PART">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_HEADER_SENDER_TAG">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_HEADER_FROM_TAG">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_HEADER_IN_REPLY_TO_TAG">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_HEADER_REPLY_TO_TAG">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_HEADER_TO_TAG">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_HEADER_CC_TAG">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_HEADER_BCC_TAG">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_HEADER_SUBJECT_TAG">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_HEADER_DATE_TAG">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_PLAIN_TEXT">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_AUDIO_WAV">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_VIDEO_MPEG4">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAP_COMMAND_VAL">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.m_sHost">
            <summary>
            Imap host
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.m_nPort">
            <summary>
            Imap port : default IMAP_DEFAULT_PORT : 143
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.m_sUserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.m_sPassword">
            <summary>
            User Password
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.m_bIsConnected">
            <summary>
            Is Imap server connected
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.m_oImapServ">
            <summary>
            Tcpclient object
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.m_oNetStrm">
            <summary>
            Network stream object
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.m_oRdStrm">
            <summary>
            StreamReader object
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.m_SSLStream">
            <summary>
            SSL connection stream
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.m_rdr">
            <summary>
            StreamReader for SSL conection
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.m_useSSL">
            <summary>
            Global flag to tell the TCP functions to use the SSL stream or not
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase._logger">
            <summary>
            The logging object to use in this instance
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPBase.Log(InterIMAP.Synchronous.IMAPBase.LogTypeEnum,System.String)">
            <summary>
            Logging function
            </summary>
            <param name="type">Log type;LogTypeEnum</param>
            <param name="log">Log data</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPBase.ValidateServerCertificate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Callback for RemoteCertificateValidation object. Use for SSL connections.
            </summary>
            <param name="sender"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="sslPolicyErrors"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPBase.Capability">
            <summary>
            IMAP Capability command
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPBase.Connect(System.String,System.UInt16,System.Boolean)">
            <summary>
            Connect to specified host and port
            </summary>
            <param name="sHost">Imap host</param>
            <param name="nPort">Imap port</param>
            <param name="useSSL">Use a secure connection</param>
            <returns>ImapResponseEnum type</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPBase.Disconnect">
            <summary>
            Disconnect connection with Imap server
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPBase.SendAndReceive(System.String,System.Collections.ArrayList@)">
            <summary>
            Send command to server and retrieve response
            </summary>
            <param name="command">Command to send Imap Server</param>
            <param name="sResultArray">Imap Server response</param>
            <returns>ImapResponseEnum type</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPBase.Receive(System.Collections.ArrayList@)">
            <summary>
             retrieve response
            </summary>        
            <param name="sResultArray">Imap Server response</param>
            <returns>ImapResponseEnum type</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPBase.SendAndReceiveByNumLines(System.String,System.Collections.ArrayList@,System.Int32)">
            <summary>
            Send command to server and retrieve response
            </summary>
            <param name="command">Command to send Imap Server</param>
            <param name="sResultArray">Imap Server response</param>
            <param name="nNumLines">Number of lines to receive</param>
            <returns>ImapResponseEnum type</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPBase.ReceiveBuffer(System.String@,System.Int32)">
            <summary>
            Read the Server Response by specified size
            </summary>
            <param name="sBuffer"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPBase.IMAP_COMMAND_IDENTIFIER">
            <summary>
            Imap command identified which is combination of
            Imap identifier prefix and val
            eg. Prefix:IMAP00, Val: 1
            Imap command Identified= IMAP001
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPBase.IMAP_SERVER_RESPONSE_OK">
            <summary>
            Imap Server OK response which is combination of 
            Imap Identifier and Imap OK response.
            eg. IMAP001 OK
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPBase.IMAP_SERVER_RESPONSE_NO">
            <summary>
            Imap Server NO response which is combination of 
            Imap Identifier and Imap NO response.
            eg. IMAP001 NO
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPBase.IMAP_SERVER_RESPONSE_BAD">
            <summary>
            Imap Server BAD response which is combination of
            Imap Identifier and Imap BAD response.
            eg. IMAP001 BAD
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPBase.Logger">
            <summary>
            The logging object to use
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPBase.IMAPResponseEnum">
            <summary>
            Imap server response result
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAPResponseEnum.IMAP_SUCCESS_RESPONSE">
            <summary>
            Imap Server responded "OK"
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAPResponseEnum.IMAP_FAILURE_RESPONSE">
            <summary>
            Imap Server responded "NO" or "BAD"
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.IMAPResponseEnum.IMAP_IGNORE_RESPONSE">
            <summary>
            Imap Server responded "*"
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPBase.LogTypeEnum">
            <summary>
            Log type enum
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.LogTypeEnum.INFO">
            <summary>
            Information
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.LogTypeEnum.WARN">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.LogTypeEnum.ERROR">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.IMAPBase.LogTypeEnum.IMAP">
            <summary>
            Imap Log information
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Processors.BaseProcessor">
            <summary>
            Defines common values and functionality for a Processor
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Interfaces.IProcessor">
            <summary>
            Defines the public Properties and Methods for a Processor
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Interfaces.IProcessor.ProcessResult">
            <summary>
            The main method that performs the processing
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IProcessor.CmdResult">
            <summary>
            The result of the command returned from the server
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IProcessor.Request">
            <summary>
            The request that this processor belongs to
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IProcessor.Client">
            <summary>
            A reference to the client
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Processors.BaseProcessor.RunProcessor(System.Type,InterIMAP.Common.Commands.CommandResult)">
            <summary>
            Creates an new instance of the specified processor type, and then processes the results
            </summary>
            <param name="procType"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Common.Processors.BaseProcessor.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Interfaces.ICommand">
            <summary>
            Common elements for all IMAP command classes
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Interfaces.ICommand.OnCommandDataReceived(System.Int64,System.Int64)">
            <summary>
            Internal method that is called when the data received event is fired
            </summary>
            <param name="receivedBytes"></param>
            <param name="totalBytes"></param>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.ICommand.CommandString">
            <summary>
            The final command string to be sent to the server
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.ICommand.Parameters">
            <summary>
            List of parameters to pass into the command
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.ICommand.ParameterObjects">
            <summary>
            Storage list for the objects that were given as parameters
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.ICommand.CommandNumber">
            <summary>
            A unique number to identify this command
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.ICommand.CommandID">
            <summary>
            The ID for this command
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.ICommand.ResponseOK">
            <summary>
            The OK response string for this command
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.ICommand.ResponseNO">
            <summary>
            The NO response string for this command
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.ICommand.ResponseBAD">
            <summary>
            The BAD response string for this command
            </summary>
        </member>
        <member name="E:InterIMAP.Common.Interfaces.ICommand.CommandDataReceived">
            <summary>
            Event that is fired when data for this command is received
            </summary>
        </member>
        <member name="T:InterIMAP.MessageListDirection">
            <summary>
            Determines in which direction messages should be listed
            </summary>
        </member>
        <member name="F:InterIMAP.MessageListDirection.Ascending">
            <summary>
            Lowest/Earliest first
            </summary>
        </member>
        <member name="F:InterIMAP.MessageListDirection.Descending">
            <summary>
            Highest/Latest first
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Commands.MessagePartCommand">
            <summary>
            Command to retrieve the data for a specific part of a message
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Commands.BaseCommand">
            <summary>
            Implements ICommand and provides common functionality
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.BaseCommand.#ctor(InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Initialize common fields
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.BaseCommand.OnCommandDataReceived(System.Int64,System.Int64)">
            <summary>
            Called when data is received
            </summary>
            <param name="receivedBytes"></param>
            <param name="totalBytes"></param>
        </member>
        <member name="T:InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback">
            <summary>
            Callback signature for event that sends updates about the amount of data that has been
            received for a given command
            </summary>
            <param name="cmd">The command that is executing</param>
            <param name="bytesReceived">Total number of bytes received</param>
            <param name="totalBytes">Total number of bytes expected</param>
        </member>
        <member name="M:InterIMAP.Common.Commands.MessagePartCommand.#ctor(InterIMAP.Common.Interfaces.IMessageContent,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Create a new message part command
            </summary>
            <param name="content"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Attributes.LinkToTable">
            <summary>
            Specifies which table in the mailbox the attached class stores its data
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Attributes.LinkToTable.#ctor(System.String)">
            <summary>
            Associate this Class with the specified table
            </summary>
            <param name="table"></param>
        </member>
        <member name="T:InterIMAP.Common.Requests.MessagePartRequest">
            <summary>
            Retrieves a part of a message
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Requests.BaseRequest">
            <summary>
            Defines common values and functionality for a Request
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Interfaces.IRequest">
            <summary>
            Public properties and methods for a Request
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Interfaces.IRequest.OnRequestCompleted">
            <summary>
            Called when a request is finished processing. Fires the Completed event handler
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Interfaces.IRequest.GetProcessorAsType``1">
            <summary>
            Returns a IProcessor object as the specific type
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Common.Interfaces.IRequest.RunProcessor">
            <summary>
            Runs the processor on the results
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IRequest.Command">
            <summary>
            The command to execute for this request
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IRequest.Result">
            <summary>
            The results of the command
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IRequest.RequestID">
            <summary>
            The ID of this request
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IRequest.ProcessorResult">
            <summary>
            The processor to use on the results
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IRequest.ProcessorType">
            <summary>
            The type of processor to run on this request
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IRequest.PreCommand">
            <summary>
            Command to be executed before the main command.
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IRequest.PostCommand">
            <summary>
            Command to be executed after the main command.
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IRequest.Client">
            <summary>
            A reference to the client
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IRequest.RequestCompleteCallback">
            <summary>
            The method that is executed when the request completes.
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Requests.BaseRequest.GetProcessorAsType``1">
            <summary>
            Gets the ProcessorResult object cast as the required type
            </summary>
            <typeparam name="T">A type derived from IProcessor</typeparam>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Common.Requests.BaseRequest.#ctor(InterIMAP.Common.Requests.BaseRequest.RequestCompletedCallback)">
            <summary>
            Basic Constructor
            </summary>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Requests.BaseRequest.RequestCompletedCallback">
            <summary>
            The delegate that is to be used for providing request complete callback
            </summary>
            <param name="req"></param>
        </member>
        <member name="M:InterIMAP.Common.Requests.MessagePartRequest.#ctor(InterIMAP.Common.Interfaces.IMessageContent,InterIMAP.Common.Requests.BaseRequest.RequestCompletedCallback,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Create a new message part request
            </summary>
            <param name="content"></param>
            <param name="callback"></param>
            <param name="dataReceived"></param>
        </member>
        <member name="T:InterIMAP.Common.Requests.MessageHeaderRequest">
            <summary>
            Request to retrieve and process a message header
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Requests.MessageHeaderRequest.#ctor(InterIMAP.Common.Interfaces.IMessage,InterIMAP.Common.Requests.BaseRequest.RequestCompletedCallback)">
            <summary>
            Create a new MessageHeaderRequest
            </summary>
            <param name="msg"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Requests.FolderTreeRequest">
            <summary>
            Request the folder structure from the server and process it into a
            tree of folder objects
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Requests.FolderTreeRequest.#ctor(System.String,InterIMAP.Common.Requests.BaseRequest.RequestCompletedCallback)">
            <summary>
            Create a FolderTreeRequest specifying the callback method to execute on completion.
            </summary>
            <param name="rootFolder"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Processors.FolderListProcessor">
            <summary>
            Processes the folder list returned from the server.
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Processors.FolderListProcessor.#ctor">
            <summary>
            Instantiate a new FolderListProcessor
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Processors.FolderListProcessor.ProcessResult">
            <summary>
            Process the results of the command
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Processors.FolderListProcessor.ProcessFolderDepth(System.Int32)">
            <summary>
            Recursive method that processes the strings stored in _tempResults, generating and adding the unique folders to the database.
            </summary>
            <param name="depth">The depth at which to process the folder structure, should only be invoked with 0, recursive calls will use other values.</param>
        </member>
        <member name="M:InterIMAP.Common.Processors.FolderListProcessor.GetFolderParts(System.String)">
            <summary>
            Parses the complete folder string, determining folder delimiter, stripping unneeded content,
            and generating the necessary array.
            </summary>
            <param name="folderString">The full folder string to parse</param>
            <returns>An array consisting of the individual folder names</returns>
        </member>
        <member name="M:InterIMAP.Common.Processors.FolderListProcessor.FindFolder(System.String,InterIMAP.Common.Interfaces.IFolder@)">
            <summary>
            Searches the Folder table for a folder that has the specified fullpath
            </summary>
            <param name="fullpath">The full path to search for</param>
            <param name="foundFolder">An IFolder object for the folder that was found</param>
            <returns>The ID of the folder that was found</returns>
        </member>
        <member name="M:InterIMAP.Common.Processors.FolderListProcessor.GetFullPath(System.String[],System.Int32)">
            <summary>
            Generates the full path string based on the array passed and the depth level
            </summary>
            <param name="parts">An array representing the hierarchy of a given folder</param>
            <param name="depth">How deep to go into the supplied array</param>
            <returns>A single string reprsenting the full path of the folder</returns>
        </member>
        <member name="T:InterIMAP.Common.Interfaces.IFolder">
            <summary>
            Public properties of the Folder object
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Interfaces.IBaseObject">
            <summary>
            Common properties among all mailbox objects
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IBaseObject.ID">
            <summary>
            This object's ID
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IFolder.Name">
            <summary>
            The name of this folder
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IFolder.ParentID">
            <summary>
            The ID of this folders parent
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IFolder.FullPath">
            <summary>
            The full path of this folder
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IFolder.SubFolders">
            <summary>
            The list of this folders children
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IFolder.Exists">
            <summary>
            Number of messages in this folder
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IFolder.Recent">
            <summary>
            Number of recently added messages in this folder
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IFolder.Unseen">
            <summary>
            Number of new messages in this folder
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IFolder.Messages">
            <summary>
            List of messages in this folder
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IFolder.Parent">
            <summary>
            A reference to this folders parent folder
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Interfaces.IContact">
            <summary>
            Public properties of the Contact object
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IContact.FirstName">
            <summary>
            This Contact's First Name
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IContact.LastName">
            <summary>
            This Contact's Last Name
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IContact.EMail">
            <summary>
            This Contact's E-Mail address
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IContact.FullName">
            <summary>
            This contact's full name
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.DataManager">
            <summary>
            Responsible for the reading and writing of data to the mailbox
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Data.DataManager.#ctor(InterIMAP.Asynchronous.Client.IMAPAsyncClient)">
            <summary>
            Create a new data manager for the specified client
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:InterIMAP.Common.Data.DataManager.New">
            <summary>
            Initializes a new Database based on the embedded schema
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Data.DataManager.GetObjectTableName(System.Type)">
            <summary>
            Get the name of the table that the specified object stores its data in
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:InterIMAP.Common.Data.DataManager.Db">
            <summary>
            The Database object being managed
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Data.DataManager.FolderTable">
            <summary>
            Returns fully populated FolderTable
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Data.DataManager.ContactTable">
            <summary>
            Returns fully populated ContactTable
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Data.DataManager.MessageTable">
            <summary>
            Returns fully populated MessageTable
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Data.DataManager.ContentTable">
            <summary>
            Returns fully populated ContentTable
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Commands.SearchCommand">
            <summary>
            Sends a carefully crafted search command to the server
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.SearchCommand.#ctor(InterIMAP.Common.Commands.SearchCriteria,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Create a new Search command using the specified criteria
            </summary>        
            <param name="criteria"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Commands.FolderListCommand">
            <summary>
            IMAP Command to retreive list of folders
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.FolderListCommand.#ctor(System.String,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Generates a new FolderListCommand specifying the root folder
            </summary>
            <param name="rootFolder"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Commands.ChangeFlagCommand">
            <summary>
            Updates a messages flag
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.ChangeFlagCommand.#ctor(InterIMAP.Common.Interfaces.IMessage,InterIMAP.Common.MessageFlag,System.Boolean,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Create a new ChangeFlag command
            </summary>
            <param name="msg"></param>
            <param name="flag"></param>
            <param name="value"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:InterIMAP.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:InterIMAP.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Requests.FolderDataRequest">
            <summary>
            Request certain data about a folder
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Requests.FolderDataRequest.#ctor(InterIMAP.Common.Interfaces.IFolder,InterIMAP.Common.Requests.BaseRequest.RequestCompletedCallback)">
            <summary>
            Create a new folder data request
            </summary>
            <param name="folder"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Commands.MessageStructureCommand">
            <summary>
            Command to retrieve the structure of a message
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.MessageStructureCommand.#ctor(InterIMAP.Common.Interfaces.IMessage,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Create a new message structure command
            </summary>
            <param name="msg"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Attributes.ConnectingTable">
            <summary>
            Attribute to define what table a specific property's data is stored in
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Attributes.ConnectingTable.#ctor(System.String)">
            <summary>
            Connect this property to the specified table
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="P:InterIMAP.Common.Attributes.ConnectingTable.ConnectingTableName">
            <summary>
            Name of the table this property is connected to
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPFolderQuota">
            <summary>
            Simple class to store the quota information for a folder
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolderQuota.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolderQuota.ToString">
            <summary>
            Simple override to show the quota data
            </summary>
            <returns></returns>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolderQuota.CurrentSize">
            <summary>
            The current size of this folder
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolderQuota.MaxSize">
            <summary>
            The maximum size of this folder
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPFolder">
            <summary>
            Contains all the information for a folder and its sub-folders and messages as stored on the server
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.SetParent(InterIMAP.Synchronous.IMAPFolder)">
            <summary>
            Sets the ParentFolder field for this folder
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.SetClient(InterIMAP.Synchronous.IMAPClient)">
            <summary>
            Sets the client field for this folder and all the sub folders
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.CheckForNewMessages">
            <summary>
            Performs a search for new messages on this folder, adding them to the message collection
            </summary>
            <returns>Number of new messages found</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.GetMessageIDs(System.Boolean)">
            <summary>
            Gets the UIDs for each message in this folder, and populates the Messages collection with IMAPMessage objects
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.AppendMessage(InterIMAP.Synchronous.IMAPMessage,System.String)">
            <summary>
            Appends new message to end of this folder
            </summary>
            <param name="msg"></param>
            <param name="content">The content of the message</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.Select">
            <summary>
            Sets the IsCurrentlySelected property to True which forces the server to SELECT this folder
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.Examine">
            <summary>
            Sets the IsCurrentlyExamined property to True which forces the server to EXAMINE this folder
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.GetMessageByID(System.Int32)">
            <summary>
            Finds a message in this folder with the specified UID. Returns null if UID not found.
            </summary>
            <param name="UID">Message UID to search for</param>
            <returns>IMAPMessage object of found message. Null if UID not found.</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.GetAllMessageData">
            <summary>
            Forces the system to download the full content for each message in this folder and the sub folders.
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.#ctor(System.String,System.String)">
            <summary>
            Alternate Constructor
            </summary>
            <param name="name"></param>
            <param name="parent"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.ToString">
            <summary>
            Simple override to show the folder name. Only really useful for debugging purposes. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.EmptyFolder">
            <summary>
            This method will delete all the messages in this folder. Use with caution.
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.CopyAllMessagesToFolder(InterIMAP.Synchronous.IMAPFolder)">
            <summary>
            Copies all messages in this folder to the specified folder
            </summary>
            <param name="destFolder">The destination folder all the messages should be copied to</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.CopyMessageToFolder(InterIMAP.Synchronous.IMAPMessage,InterIMAP.Synchronous.IMAPFolder)">
            <summary>
            Copies the specified message to the specified folder
            </summary>
            <param name="msg">The message to copy</param>
            <param name="destFolder">The folder to copy the message to</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.MoveMessageToFolder(InterIMAP.Synchronous.IMAPMessage,InterIMAP.Synchronous.IMAPFolder)">
            <summary>
            Moves the specified message to the specified folder
            </summary>
            <param name="msg">The message to move</param>
            <param name="destFolder">The folder to move the message to</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.DeleteMessage(InterIMAP.Synchronous.IMAPMessage)">
            <summary>
            Deletes the specified message
            </summary>
            <param name="msg">The message to delete</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.CreateFolder(System.String,System.Boolean)">
            <summary>
            Creates a new sub-folder under this folder
            </summary>
            <param name="name">Name of folder to create</param>
            <param name="autoSelect">Automatically select this folder upon successful creation</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.DeleteFolder(System.String)">
            <summary>
            Deletes a sub-folder under this folder. All messages contained in this folder will be deleted.
            </summary>
            <param name="name">Name of folder to delete</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.Search(InterIMAP.Synchronous.IMAPSearchQuery)">
            <summary>
            Searches this folder, and optionally the sub-folders for the specified query
            </summary>
            <param name="query">IMAPSearchQuery object containing the search options</param>
            <returns>A new IMAPSearchResult object containing the results of the query</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.OfflineSearch(InterIMAP.Synchronous.IMAPSearchQuery)">
            <summary>
            Private method for manually searching the cache when in offline mode
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.AddressListContains(System.Collections.Generic.List{InterIMAP.Synchronous.IMAPMailAddress},InterIMAP.Synchronous.IMAPMailAddress)">
            <summary>
            Helper method to quickly check whether a specific address exists within the specified list
            </summary>
            <param name="list">The source list to check</param>
            <param name="addr">The address to look for</param>
            <returns>True if the address was found, False if it wasnt</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.FormatDateToServer(System.DateTime)">
            <summary>
            Converts a standard DateTime to a format usable by the IMAP server
            </summary>
            <param name="date">The date to convert</param>
            <returns>The date formatted for use on the IMAP server</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFolder.FormatDateToServer(System.String)">
            <summary>
            Overload for FormatDateToServer to take a string as a parameter. If the string can be parsed into a date, it is converted.
            </summary>
            <param name="date">The string containing the date</param>
            <returns>The re-formatted date string or String.Empty if the date could not be parsed.</returns>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolder.Selectable">
            <summary>
            Determines whether this folder can be selected
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolder.Quota">
            <summary>
            For quota information for this folder
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolder.IsCurrentlySelected">
            <summary>
            Flag to indicate whether this folder is currently selected. Setting this to True will force the server to select it
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolder.IsCurrentlyExamined">
            <summary>
            Flag to indicate whether this folder is currently examined. Setting this to True will force the server to examine it
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolder.ParentFolder">
            <summary>
            The parent folder of this folder
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolder.ParentFolderName">
            <summary>
            The name of the parent folder
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolder.FolderName">
            <summary>
            The name of this folder
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolder.SubFolders">
            <summary>
            The collection of folders under this folder
            </summary>        
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolder.FolderPath">
            <summary>
            The complete path to this folder from the root.
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolder.Messages">
            <summary>
            List of messages in this folder
            </summary>        
        </member>
        <member name="T:InterIMAP.IMAPLogger">
            <summary>
            Class to facilitate the logging of messages from the system when in debug mode
            </summary>
        </member>
        <member name="M:InterIMAP.IMAPLogger.#ctor(InterIMAP.IMAPConfig,System.Object[])">
            <summary>
            Default constructor. Requires to be initialized with an IMAPConfig instance
            </summary>
            <param name="config"></param>
            <param name="extraParams">Used to pass in the ID of the current message worker</param>
        </member>
        <member name="M:InterIMAP.IMAPLogger.Log(InterIMAP.IMAPLogger.LoggingSource,InterIMAP.IMAPLogger.LogType,System.String)">
            <summary>
            Logs information to the console and optionally a log file
            </summary>
            <param name="source"></param>
            <param name="type"></param>
            <param name="msg"></param>        
        </member>
        <member name="P:InterIMAP.IMAPLogger.Paused">
            <summary>
            Temporarily stop all logging on the instance
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPLogger.DetailLevel">
            <summary>
            Gets or Sets the amount of information is logged
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPLogger.Config">
            <summary>
            The IMAPConfig object current associated with this logger
            </summary>
        </member>
        <member name="T:InterIMAP.IMAPLogger.LoggingSource">
            <summary>
            The two different sources a logging event can come from. Used for debug level filtering
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPLogger.LoggingSource.IMAP">
            <summary>
            Log all events generated by the IMAP client
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPLogger.LoggingSource.InterIMAP">
            <summary>
            Log all events generated by the IMAP client wrapper
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPLogger.LoggingSource.MessageWorker">
            <summary>
            Log all events generated by a message worker
            </summary>
        </member>
        <member name="T:InterIMAP.IMAPLogger.LogType">
            <summary>
            The types of messages that can be logged
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPLogger.LogType.Info">
            <summary>
            An informational event
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPLogger.LogType.Warning">
            <summary>
            A warning event
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPLogger.LogType.Error">
            <summary>
            An error event
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPLogger.LogType.General">
            <summary>
            An unlabeled event
            </summary>
        </member>
        <member name="T:InterIMAP.IMAPLogger.ExternalLogger">
            <summary>
            
            </summary>
            <param name="logMsg"></param>
        </member>
        <member name="T:InterIMAP.Common.Commands.SelectFolderCommand">
            <summary>
            Selects the specified folder. Required to make changes to a folder on the server
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.SelectFolderCommand.#ctor(InterIMAP.Common.Interfaces.IFolder,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Create a new SelectFolderCommand for the specified folder
            </summary>
            <param name="folder"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Commands.SearchCriteria">
            <summary>
            Defines the information that is being searched for
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.SearchCriteria.#ctor(System.Boolean)">
            <summary>
            Create a new search criteria including new messages
            </summary>
            <param name="includeNew"></param>
        </member>
        <member name="M:InterIMAP.Common.Commands.SearchCriteria.ToString">
            <summary>
            Generates the proper search string based on the values that have been set
            </summary>
            <returns></returns>
        </member>
        <member name="P:InterIMAP.Common.Commands.SearchCriteria.SearchForNew">
            <summary>
            Indicates that the results should contain new messages only
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Commands.MessageHeaderCommand">
            <summary>
            Command to retrieve the header of the specified message
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.MessageHeaderCommand.#ctor(InterIMAP.Common.Interfaces.IMessage,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Create a new MessageHeaderCommand for the specified message
            </summary>
            <param name="msg"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.IMAPConfig">
            <summary>
            A simple container to manage all the configuration options
            </summary>
        </member>
        <member name="M:InterIMAP.IMAPConfig.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:InterIMAP.IMAPConfig.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Alternate Constructor. Not all options are represented here.
            </summary>
            <param name="host">The name of the server to connect to</param>
            <param name="username">The username of the account</param>
            <param name="passowrd">The password to the account</param>
            <param name="ssl">Set to True to connect using SSL</param>
            <param name="autoLogon">Set to True to have the system automatically logged in</param>
            <param name="folder">The Root folder that should be used. Leave blank to include all folders.</param>
        </member>
        <member name="M:InterIMAP.IMAPConfig.#ctor(System.String)">
            <summary>
            Creates a config object based on previously saved settings
            </summary>
            <param name="configFile"></param>
        </member>
        <member name="M:InterIMAP.IMAPConfig.SaveConfig(System.String)">
            <summary>
            Serializes current config settings to the specified config file in binary format.
            </summary>
            <param name="configFile"></param>
        </member>
        <member name="M:InterIMAP.IMAPConfig.SaveConfig">
            <summary>
            Save the configuration to the already specified config file
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.ConfigFile">
            <summary>
            The file that the configuration is stored in
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.DebugDetail">
            <summary>
            Sets the amount of detail logged when in debug mode
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.LogFile">
            <summary>
            Specifies the file that this configuration will use to log output when using debug mode
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.AutoSyncCache">
            <summary>
            Flag to indicate whether the local cache should be synchronized with the server upon successful logon
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.Format">
            <summary>
            Format that the local cache should be stored in
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.AutoGetMsgID">
            <summary>
            Decide whether to automatically retreive all the message UIDs for all folders
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.CacheFile">
            <summary>
            File where InterIMAP will store the local cache
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.DebugMode">
            <summary>
            Set whether the library will output debug information to the console
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.UserName">
            <summary>
            Username to the mail account
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.Password">
            <summary>
            Password to the mail account
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.Host">
            <summary>
            Host server to connect to
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.UseSSL">
            <summary>
            Set whether an SSL connection should be used
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.DefaultFolderName">
            <summary>
            Default folder to select once connected
            </summary>
        </member>
        <member name="P:InterIMAP.IMAPConfig.AutoLogon">
            <summary>
            Sets whether the client should attempt to connect during the initialization of the client object
            </summary>
        </member>
        <member name="T:InterIMAP.IMAPConfig.DebugDetailLevel">
            <summary>
            The different levels of debug output
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPConfig.DebugDetailLevel.All">
            <summary>
            Log all data
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPConfig.DebugDetailLevel.InterIMAPOnly">
            <summary>
            Log only information from InterIMAP. No IMAP commands and responses.
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPConfig.DebugDetailLevel.ErrorsOnly">
            <summary>
            Logs only error messages
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPSearchResult">
            <summary>
            Container to hold all the information about a search including the query used and the results found
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPSearchResult.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchResult.Query">
            <summary>
            Query used to generate these results
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchResult.Folder">
            <summary>
            Folder the search was performed in
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchResult.Messages">
            <summary>
            Messages that were found based on query
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPSearchQuery">
            <summary>
            Class for building a search query to search for messages within a folder
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPSearchQuery.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPSearchQuery.QuickSearchTo(System.String,System.String)">
            <summary>
            Quickly create a search query specifying the display name and/or email address for the To: field
            </summary>
            <param name="name">display name of the person to search for</param>
            <param name="addr">e-mail address of the person to search for</param>
            <returns>IMAPSearchQuery object suitable for passing into the search method</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPSearchQuery.QuickSearchFrom(System.String,System.String)">
            <summary>
            Quickly create a search query specifying the display name and/or email address for the From: field
            </summary>
            <param name="name">display name of the person to search for</param>
            <param name="addr">e-mail address of the person to search for</param>
            <returns>IMAPSearchQuery object suitable for passing into the search method</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPSearchQuery.QuickSearchCC(System.String,System.String)">
            <summary>
            Quickly create a search query specifying the display name and/or email address for the CC: field
            </summary>
            <param name="name">display name of the person to search for</param>
            <param name="addr">e-mail address of the person to search for</param>
            <returns>IMAPSearchQuery object suitable for passing into the search method</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPSearchQuery.QuickSearchBCC(System.String,System.String)">
            <summary>
            Quickly create a search query specifying the display name and/or email address for the BCC: field
            </summary>
            <param name="name">display name of the person to search for</param>
            <param name="addr">e-mail address of the person to search for</param>
            <returns>IMAPSearchQuery object suitable for passing into the search method</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPSearchQuery.QuickSearchSubject(System.String)">
            <summary>
            Quickly create a search query specifying the subject string to search for
            </summary>
            <param name="subject">The text to search for within the subject</param>
            <returns>IMAPSearchQuery object suitable for passing into the search methods</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPSearchQuery.QuickSearchContent(System.String)">
            <summary>
            Quickly create a search query specifying the content string to search for
            </summary>
            <param name="content">The text to search with the Text and HTML content sections</param>
            <returns>IMAPSearchQuery object suitable for passing into the search methods</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPSearchQuery.QuickSearchNew">
            <summary>
            Quickly create a search query searching only for new messages
            </summary>
            <returns>IMAPSearchQuery object suitable for passing into the search methods</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPSearchQuery.QuickSearchDateRange(System.String,System.String)">
            <summary>
            Quickly create a search query searching only for messages who date is within the date range
            </summary>
            <param name="sdate"></param>
            <param name="edate"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPSearchQuery.QuickSearchDateRange(System.DateTime,System.DateTime)">
            <summary>
            Quickly create a search query searching only for messages who date is within the date range
            </summary>
            <param name="sdate"></param>
            <param name="edate"></param>
            <returns></returns>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.To">
            <summary>
            Search for messages with addresses in the Tofield
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.From">
            <summary>
            Search for messages with addresses in the From field
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.CC">
            <summary>
            Search for messages with addresses in the CC field
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.BCC">
            <summary>
            Search for messages with addresses in the BCC field
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.Subject">
            <summary>
            Search for messages where the subject contains the specified string
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.Content">
            <summary>
            Search for messages where the Text and HTML content contains the specified string
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.Date">
            <summary>
            Search for messages where the Received date equals the specified date
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.BeforeDate">
            <summary>
            Search for messages where the received date is before the specified date
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.AfterDate">
            <summary>
            Search for messages where the received date is after the specified date
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.New">
            <summary>
            Search for new messages
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.Recent">
            <summary>
            Search for recent messages
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.Answered">
            <summary>
            Search for answered messages
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.Deleted">
            <summary>
            Search for messages marked as deleted
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.Draft">
            <summary>
            Search for messages marked as a draft
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.LargerThan">
            <summary>
            Search for messages that are larger than the specified size (bytes)
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.SmallerThan">
            <summary>
            Search for messages that are smaller than the specified size (bytes)
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPSearchQuery.Range">
            <summary>
            Search for messages whose date falls within the start and end date of this range
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.DateRange">
            <summary>
            Simple class to facilitate the searching of messages within a start and end date
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.DateRange.#ctor(System.String,System.String)">
            <summary>
            Construct a DateRange object using strings to specify the start and end dates
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.DateRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Construct a DateRange object using DateTime objects for the start and end dates
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.DateRange.DateWithinRange(System.DateTime)">
            <summary>
            Determines if the specified date falls within the range of this instance
            </summary>
            <param name="date">The date to check</param>
            <returns>True if within the range, False if outside the range</returns>
        </member>
        <member name="P:InterIMAP.Synchronous.DateRange.StartDate">
            <summary>
            The beginning of the date range
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.DateRange.EndDate">
            <summary>
            The end of the date range
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPFolderCollection">
            <summary>
            Collection class to make selecting specific folders a little easier
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFolderCollection.Item(System.String)">
            <summary>
            Search within this folder for a sub-folder with the specified name. Not Recursive.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAP">
            <summary>
            The low-level IMAP management class
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.Login(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Login to specified Imap host and default port (143)
            </summary>
            <param name="sHost">Imap Server name</param>
            <param name="sUserId">User's login id</param>
            <param name="sPassword">User's password</param>
            <param name="useSSL">Use a secure connection</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.Login(System.String,System.UInt16,System.String,System.String,System.Boolean)">
            <summary>
            Login to specified Imap host and port
            </summary>
            <param name="sHost">Imap server name</param>
            <param name="nPort">Imap server port</param>
            <param name="sUserId">User's login id</param>
            <param name="sPassword">User's password</param>        
            <param name="useSSL">Use secure connection</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.LogOut">
            <summary>
            Logout the user: It logout the user and disconnect the connetion from IMAP server.
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.SelectFolder(InterIMAP.Synchronous.IMAPFolder)">
            <summary>
            Overload to take an IMAPFolder object instead of the folder name
            </summary>
            <param name="folder"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.ExamineFolder(InterIMAP.Synchronous.IMAPFolder)">
            <summary>
            Overload to take an IMAPFolder object instead of the folder name
            </summary>
            <param name="folder"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.SelectFolder(System.String)">
            <summary>
            Select the sFolder/mailbox after login
            </summary>
            <param name="sFolder">mailbox folder</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.GetSelectedFolderMessageIDs(System.Boolean)">
            <summary>
            Searches the currently selected folder for the message UIDs
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.ProcessFolders(System.String)">
            <summary>
            New method for processing folder list
            </summary>
            <param name="rootFolder"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.ExamineFolder(System.String)">
            <summary>
            Examine the sFolder/mailbox after login
            </summary>
            <param name="sFolder">Mailbox folder</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.Restore(System.Boolean,System.Boolean)">
            <summary>
            Restore the connection using available old data
            Select the sFolder if previously selected
            </summary>
            <param name="bSelectFolder">If true then it selects the folder</param>
            <param name="useSSL">Set to true if using a secure connection</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.HasEnoughQuota(System.String)">
            <summary>
            Check if enough quota is available
            </summary>
            <param name="sFolderName">Mailbox folder</param>
            <returns>true if enough mail quota</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.GetQuota(System.String,System.Boolean@,System.Int32@,System.Int32@)">
            <summary>
            Get the quota for specific folder
            </summary>
            <param name="sFolderName">Mailbox folder</param>
            <param name="bUnlimitedQuota">Is unlimited quota</param>
            <param name="nUsedKBytes">Used quota in Kbytes</param>
            <param name="nTotalKBytes">Total quota in KBytes</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.SearchMessage(System.String[],System.Boolean,System.Collections.ArrayList)">
            <summary>
            Search the messages by specified criterias
            </summary>
            <param name="asSearchData">Search criterias</param>
            <param name="bExactMatch">Is it exact search</param>
            <param name="asSearchResult">search result</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.ProcessMessageFlags(InterIMAP.Synchronous.IMAPMessage)">
            <summary>
            Retreive the flags for the specified message
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.MarkMessageAsRead(InterIMAP.Synchronous.IMAPMessage)">
            <summary>
            Marks the specified message as \Seen on the server
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.ProcessMessageHeader(InterIMAP.Synchronous.IMAPMessage,System.Int32)">
            <summary>
            Retrieves the header information from the server and populates the IMAPMessage objects properties
            </summary>
            <param name="msg"></param>
            <param name="partID"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.ProcessBodyContent(InterIMAP.Synchronous.IMAPMessage)">
            <summary>
            Downloads the entire body of the message from the server. includes content and attachments. 
            Structure is then parsed and the various data items are seperated and stored in the message object.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.ListContainsString(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Helper method to determine any of the strings in the souce contain the specified string
            </summary>
            <param name="source">Source list of strings</param>
            <param name="str">String to test with</param>
            <returns>true/false</returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.GetNameValue(System.String)">
            <summary>
            Takes a string which contains something like Content-Type: Blah and returns Content-Type and Blah as sepearte
            string in an array.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAP.ProcessBodyParts(InterIMAP.Synchronous.IMAPMessage)">
            <summary>
            Takes the IMAPMessageContent objects created in ProcessBodyStructure and downloads the content
            </summary>
            <param name="msg"></param>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAP.Config">
            <summary>
            Write-only property for setting the config instance for use within the IMAP engine
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAP.RawFolderList">
            <summary>
            Raw list of folders needed for cache synchronization
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAP.IsLoggedIn">
            <summary>
            Is the user currently logged in?
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAP.SelectedFolder">
            <summary>
            The currently selected folder
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAP.ExaminedFolder">
            <summary>
            The currently examined folder
            </summary>
        </member>
        <member name="T:InterIMAP.Asynchronous.Client.IMAPMailboxManager">
            <summary>
            Class used to manage objects in a mailbox
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.#ctor(InterIMAP.Asynchronous.Client.IMAPAsyncClient)">
            <summary>
            Create a new mailbox for the specified client
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.LoadMailbox(System.String)">
            <summary>
            Loads the specified mbx file
            </summary>
            <param name="mbxFile"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.SaveNewMailbox(System.String)">
            <summary>
            Creates a new mailbox based on what is currently loaded.
            Can be used to create a backup of an existing physical mailbox, or
            create a new physical mailbox based on a virtual one.
            </summary>
            <param name="mbxFile"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.InitializeMailbox">
            <summary>
            Creates an empty mailbox
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.Synchronize">
            <summary>
            Updates physical mailbox to reflect current state of server
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.AddFolder(System.String,InterIMAP.Common.Interfaces.IFolder)">
            <summary>
            Adds a new folder to the mailbox, specifying an optional parent
            </summary>
            <param name="name">The name of the folder to add</param>
            <param name="parent">The parent folder, or null for no parent</param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.AddMessage(System.Int32,System.Int32)">
            <summary>
            Adds a new message stub to the mailbox
            </summary>
            <param name="uid">The UID from the server</param>
            <param name="folderid">The ID of the folder this message is stored in</param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.RemoveMessage(System.Int32,System.Int32)">
            <summary>
            Removes the specified message from the mailbox. Assumes that the message has been successfully
            expunged from the server.
            </summary>
            <param name="uid"></param>
            <param name="folderid"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.RenameFolder(InterIMAP.Common.Interfaces.IFolder,System.String)">
            <summary>
            Renames the specified folder
            </summary>
            <param name="sourceFolder"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.MoveFolder(InterIMAP.Common.Interfaces.IFolder,InterIMAP.Common.Interfaces.IFolder)">
            <summary>
            Moves the specified folder
            </summary>
            <param name="folder"></param>
            <param name="parentFolder"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.DeleteFolder(InterIMAP.Common.Interfaces.IFolder)">
            <summary>
            Deletes the specified folder and all the messages it contains. Sub folders are moved up 
            to the parent folder.
            </summary>
            <param name="deadFolder"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.AddContact(System.String,System.String,System.String)">
            <summary>
            Adds a new contact to the mailbox
            </summary>
            <param name="fname">The contacts First Name</param>
            <param name="lname">The contacts Last Name</param>
            <param name="email">The contacts E-Mail address</param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.AddContact(System.String,System.String)">
            <summary>
            Add a new contact to the mailbox
            </summary>
            <param name="fullName"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.AddMessageContent(System.Int32)">
            <summary>
            Add a new message content section to the mailbox
            </summary>
            <param name="messageID"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetChildFolders(InterIMAP.Common.Interfaces.IFolder)">
            <summary>
            Returns the list of folders that have their parent sent to the ID of rootFolder
            </summary>
            <param name="rootFolder"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetSubFolders(InterIMAP.Common.Interfaces.IFolder)">
            <summary>
            Get a list of all of the specified folders child folders
            </summary>
            <param name="parentFolder">The folder of which to get the children</param>
            <returns>Array of child folders</returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetAllFolders">
            <summary>
            Returns an array of all the folders in the mailbox. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetFolderByID(System.Int32)">
            <summary>
            Retreives a folder from the mailbox with the specified ID
            </summary>
            <param name="id">ID of folder to find</param>
            <returns>IFolder object, or null if ID not found</returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetFolderByPath(System.String)">
            <summary>
            Finds a folder in the mailbox based on its full path
            </summary>
            <param name="fullpath">The full path of the folder to search for</param>
            <returns>IFolder object, or null if the folder was not found</returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.PopulateFolderData(InterIMAP.Common.Requests.AsyncBatchProgressCallback,InterIMAP.Common.Requests.AsyncBatchCompletedCallback)">
            <summary>
            Submits an Examine request for each folder to store its message count data
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.DownloadEntireAccount(InterIMAP.Asynchronous.Client.IMAPMailboxManager.AccountDownloadProgressCallback,InterIMAP.Asynchronous.Client.IMAPMailboxManager.AccountDownloadCompleteCallback)">
            <summary>
            Downloads every message in every folder in the system. Used for building the local cache
            </summary>
            <param name="progCallback"></param>
            <param name="completedCallback"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetObjectTableName(System.Type)">
            <summary>
            Retreives the name of the table an objects data is stored in
            </summary>
            <param name="type">The Type of the object</param>
            <returns>The name of the data table</returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetMessageByUID(System.Int32,System.Int32)">
            <summary>
            Search for a message within the specified folder using its UID
            </summary>
            <param name="uid">The UID of the message to find</param>
            <param name="folderid">The ID of the folder that the message is in</param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetMessageByID(System.Int32)">
            <summary>
            Retrieve a message from the mailbox with the specified internal ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetMessagesByFolder(InterIMAP.Common.Interfaces.IFolder)">
            <summary>
            Get a list of messages based on the specified folder
            </summary>
            <param name="folder"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetMessagesByFolder(InterIMAP.Common.Interfaces.IFolder,InterIMAP.MessageListDirection)">
            <summary>
            Get a list of messages based on the specified folder and in the specified direction
            </summary>
            <param name="folder"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetContactByEMail(System.String)">
            <summary>
            Find a contact based on the e-mail address
            </summary>
            <param name="email">The e-mail address to search for</param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.GetMessageContent(System.Int32)">
            <summary>
            Returns an array of all the message content parts for the specified message
            </summary>
            <param name="messageID"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.SetMessageFlag(InterIMAP.Common.Interfaces.IMessage,InterIMAP.Common.MessageFlag,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="flag"></param>
            <param name="value"></param>
            <param name="localOnly">Indicates if the flag should be set only on the local object, and not on the server</param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.MarkMessageAsRead(InterIMAP.Common.Interfaces.IMessage)">
            <summary>
            Marks the specified message as \Seen on the server
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPMailboxManager.SaveAttachment(InterIMAP.Common.Interfaces.IMessageContent,System.String)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <param name="path"></param>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPMailboxManager.MailboxStorageType">
            <summary>
            Flag indicating which storage mechanism currently being used
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPMailboxManager.Folders">
            <summary>
            Returns a list of top-level folders
            </summary>
        </member>
        <member name="T:InterIMAP.Asynchronous.Client.IMAPAsyncClient">
            <summary>
            The main entry point into the IMAP library
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPAsyncClient.#ctor(InterIMAP.IMAPConfig,System.Int32)">
            <summary>
            Create a new IMAPAsyncClient using the specified configuration and number of worker connections
            </summary>
            <param name="config"></param>
            <param name="numberWorkers"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPAsyncClient.Start">
            <summary>
            Starts up the worker connections. Blocks calling thread until either all workers are ready, 
            or an error was detected
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPAsyncClient.Stop">
            <summary>
            Close any active worker connections
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPAsyncClient.Config">
            <summary>
            The current configuration being used by this client
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPAsyncClient.ConnectionPool">
            <summary>
            This clients pool of connections
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPAsyncClient.MailboxManager">
            <summary>
            This clients Mailbox
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPAsyncClient.RequestManager">
            <summary>
            This clients Request system
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPAsyncClient.DataManager">
            <summary>
            This clients Data Manager
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPAsyncClient.Aggregator">
            <summary>
            This clients log aggregator
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPAsyncClient.IsAlive">
            <summary>
            Flag indicating if any worker connections are active
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPAsyncClient.ReadyToGo">
            <summary>
            Flag indicating if all worker connections are active and no errors were reported
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPAsyncClient.WeHaveAProblem">
            <summary>
            Flag indicating if there were any errors reported during startup
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPAsyncClient.NumberOfWorkers">
            <summary>
            Get/Set number of worker threads being used. Must Stop/Start for changes to take effect.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Processors.MessagePartProcessor">
            <summary>
            Processes the result of the MessagePart command
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Processors.MessageHeaderProcessor">
            <summary>
            Processes the header of a message
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Processors.MessageHeaderProcessor.Message">
            <summary>
            The message object this processor is working on
            </summary>
        </member>
        <member name="T:InterIMAP.Common.LogType">
            <summary>
            Log type enum
            </summary>
        </member>
        <member name="F:InterIMAP.Common.LogType.INFO">
            <summary>
            Information
            </summary>
        </member>
        <member name="F:InterIMAP.Common.LogType.WARN">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:InterIMAP.Common.LogType.ERROR">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:InterIMAP.Common.LogType.IMAP">
            <summary>
            Imap Log information
            </summary>
        </member>
        <member name="T:InterIMAP.Common.IMAPError">
            <summary>
            enum for Imap exception errors
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_URI">
            <summary>
            failure parsing the url
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_MESSAGEUID">
            <summary>
            invalid message uid in the url
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_AUTHFAILED">
            <summary>
            invalid username/password in the url
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_CONNECT">
            <summary>
            failure connecting to imap server
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_NOTCONNECTED">
            <summary>
            not connected to any IMAP
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_LOGIN">
            <summary>
            failure logging into imap server
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_LOGOUT">
            <summary>
            failure to logout from imap server
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_INSUFFICIENT_DATA">
            <summary>
            not enough data to restore
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_TIMEOUT">
            <summary>
            timeout while waiting for response
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_SOCKET">
            <summary>
            socket error while receiving
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_QUOTA">
            <summary>
            failure getting the quota information
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_SELECT">
            <summary>
            failure selecting a IMAP folder
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_EXAMINE">
            <summary>
            failure examining an IMAP folder
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_NOTSELECTED">
            <summary>
             No folder is currently selected
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_SEARCH">
            <summary>
            failure to search
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_SEARCH_EXACT">
            <summary>
            failed to do exact match after search
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_INVALIDSEARCHKEY">
            <summary>
            unsupported search key
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_GETMIME">
            <summary>
            failure to get message MIME
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_INVALIDHEADER">
            <summary>
            Message Header is in invalid format
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_FETCHBODYSTRUCT">
            <summary>
            Failed to fetch the bodystructure
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_FETCHMSG">
            <summary>
            failure to fetch a IMAP message
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_MEMALLOC">
            <summary>
            failure to allocate memory
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_ENCODINGERROR">
            <summary>
            failure to encode the audio content
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_FILEIO">
            <summary>
            failure to read/write the audio content
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_STOREMSG">
            <summary>
            failure to store the message in IMAP
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_EXPUNGE">
            <summary>
            failure to issue expunge command
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_INVALIDPARAM">
            <summary>
            invalid parameter to API
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_CAPABILITY">
            <summary>
            Capability command error
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPError.IMAP_ERR_SERIOUS">
            <summary>
            Serious Problem
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.ConfigDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.ContactDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.FolderDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageFromContactsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageToContactsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageCcContactsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageBccContactsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.ContentDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.ConfigRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.ContactRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.FolderRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageFromContactsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageToContactsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageCcContactsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageBccContactsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.ContentRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.ConfigRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.ContactRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.FolderRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageFromContactsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageToContactsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageCcContactsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.MessageBccContactsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.Mailbox.ContentRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:InterIMAP.Asynchronous.Client.IMAPRequestManager">
            <summary>
            Manages the requests to be processed by the worker threads
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPRequestManager.#ctor(InterIMAP.Asynchronous.Client.IMAPAsyncClient)">
            <summary>
            Create a new request manager for the specified client
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPRequestManager.GetNextRequest">
            <summary>
            Gets the next pending request, adding it to the active requests list.
            Returns null if there are no pending requests.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPRequestManager.GetNextBatchRequest">
            <summary>
            Gets the next pending batch request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPRequestManager.RequestCompleted(InterIMAP.Common.Interfaces.IRequest)">
            <summary>
            Removes the specified request from the active requests list
            </summary>
            <param name="req">The request to remove</param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPRequestManager.SubmitRequest(InterIMAP.Common.Interfaces.IRequest,System.Boolean)">
            <summary>
            Inserts a new request and the end of the pending requests list
            </summary>
            <param name="req">The request to add</param>
            <param name="urgent">If True, request will be added to beginning to pending requests.</param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPRequestManager.SubmitBatchRequest(InterIMAP.Common.Interfaces.IBatchRequest,System.Boolean)">
            <summary>
            Inserts a new batch request to the end of the pending requests list
            </summary>
            <param name="batch"></param>
            <param name="urgent"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPRequestManager.SubmitAsyncBatchRequest(InterIMAP.Common.Interfaces.IBatchRequest,System.Boolean)">
            <summary>
            Submits a batch of asynchronous requests
            </summary>
            <param name="batch"></param>
            <param name="urgent"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPRequestManager.SubmitAndWait(InterIMAP.Common.Interfaces.IRequest,System.Boolean)">
            <summary>
            Submits the specified request and then blocks the calling thread until it completes.
            </summary>
            <param name="req"></param>
            <param name="urgent"></param>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPRequestManager.RequestPending">
            <summary>
            Indicates if there is at least one request pending
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPRequestManager.BatchRequestPending">
            <summary>
            Indicates if there is at least one batch request pending
            </summary>
        </member>
        <member name="T:InterIMAP.Asynchronous.Client.IMAPConnectionPool">
            <summary>
            A class used to manage the pool of available server connections
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnectionPool.#ctor(InterIMAP.Asynchronous.Client.IMAPAsyncClient)">
            <summary>
            Create a new connection pool for the specified client
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnectionPool.StartUp">
            <summary>
            Start all of the connection threads
            </summary>        
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnectionPool.StartUp(System.Int32)">
            <summary>
            Start all of the connection threads
            </summary>        
            <param name="maxConns">Maxiumum number of worker connections to use</param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnectionPool.AnybodyAlive">
            <summary>
            Determines if there are any active, connected workers
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnectionPool.EveryoneAlive">
            <summary>
            Determines if all worker connections are active
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnectionPool.AnyFailures">
            <summary>
            Determines if any workers failed to connect
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnectionPool.Shutdown">
            <summary>
            Aborts all IMAPConnectionWorkers
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnectionPool.MaxConnections">
            <summary>
            Set the maximum number of connections to maintain. Default is 5.
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnectionPool.Config">
            <summary>
            The IMAPConfig object to use for the connections in the pool
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnectionPool.Loggers">
            <summary>
            Collection of loggers from each worker connection
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPFileAttachment">
            <summary>
            Contains all the data about a single file that is either attached to a message or embedded in it
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFileAttachment.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFileAttachment.GetFileStream">
            <summary>
            Returns a MemoryStream of the file data
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFileAttachment.SaveFile(System.String)">
            <summary>
            Saves this file, using the retreived filename, to the specified location
            </summary>
            <param name="downloadLocation">Path on the local filesystem to which the file will be saved</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPFileAttachment.ToString">
            <summary>
            Returns the filename of this attachment object
            </summary>
            <returns></returns>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFileAttachment.PartID">
            <summary>
            The section of the body that contains this attachment
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFileAttachment.FileType">
            <summary>
            The content-type of the file attachment
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFileAttachment.FileData">
            <summary>
            The array of bytes that comprise the file
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFileAttachment.FileName">
            <summary>
            The name of the file
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFileAttachment.FileSize">
            <summary>
            The size of the file
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPFileAttachment.FileEncoding">
            <summary>
            The encoding method of the file
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Processors.MessageListProcessor">
            <summary>
            Processes the string of message UIDs into an array of Integers
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Processors.MessageListProcessor.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Processors.MessageListProcessor.UIDs">
            <summary>
            List of UIDs retreived from the active folder
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Interfaces.IBatchRequest">
            <summary>
            Combines several separate requests into a single logical request to be executed.
            Guarantees that each request will be executed by the same worker in sequence.
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IBatchRequest.Requests">
            <summary>
            The list of requests to be executed. Requests will be executed in the order they are in the list
            </summary>
        </member>
        <member name="T:InterIMAP.Asynchronous.Objects.Folder">
            <summary>
            A single Folder object in the mailbox
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Objects.Folder.#ctor(InterIMAP.Asynchronous.Client.IMAPAsyncClient,System.Int32)">
            <summary>
            Create a new Folder object with the specified ID
            </summary>
            <param name="id"></param>
            <param name="client"></param>
        </member>
        <member name="P:InterIMAP.Asynchronous.Objects.Folder.ID">
            <summary>
            This Folder's ID
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Commands.HeartBeatCommand">
            <summary>
            Sends the NOOP command to the server. Used to keep idle connections active
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.HeartBeatCommand.#ctor(InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Create a new HeartBeatCommand
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Commands.CustomCommand">
            <summary>
            A Command that doesn't require any specific parameters
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.CustomCommand.#ctor(System.String,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback,System.Object[])">
            <summary>
            Create a custom command with no specific parameters
            </summary>
            <param name="cmdString"></param>
            <param name="optionalParams">Optional parameters to provide for this command</param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Commands.CommandResult">
            <summary>
            Stores the received data, and server response code from the
            ExecuteCommand method in IMAPConnection
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.CommandResult.#ctor(System.Collections.ArrayList,InterIMAP.Common.IMAPResponse,System.TimeSpan)">
            <summary>
            Creates a new command result object with the results and response
            </summary>
            <param name="results"></param>
            <param name="response"></param>
            <param name="time">The amount of time it took for this command to execute</param>
        </member>
        <member name="P:InterIMAP.Common.Commands.CommandResult.Results">
            <summary>
            The text received from the command
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Commands.CommandResult.Response">
            <summary>
            The basic response received from the server
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Commands.CommandResult.ElapsedTime">
            <summary>
            Th amount of time it took this command to complete
            </summary>
        </member>
        <member name="T:InterIMAP.Asynchronous.Objects.Message">
            <summary>
            A single Message object in the mailbox
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Interfaces.IMessage">
            <summary>
            Public properties of the Message object
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.UID">
            <summary>
            The message UID
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.Subject">
            <summary>
            The message Subject
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.DateSent">
            <summary>
            The Date the message was sent
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.DateReceived">
            <summary>
            The Date the message was received
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.ReceivedSPF">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.ContentTransferEncoding">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.DeliveredTo">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.XGMailReceived">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.Organization">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.InReplyTo">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.XOriginatingIP">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.Received">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.MimeVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.ContentType">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.ContentClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.ReturnPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.XMailer">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.XMimeOLE">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.XOriginalArrivalTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.MessageID">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.XMSTNEFCorrelator">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.ThreadTopic">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.ThreadIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.FolderID">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.FromContacts">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.ToContacts">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.CcContacts">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.BccContacts">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.MessageContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.Folder">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.TextData">
            <summary>
            Returns the content of the first part that contains text only data
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.HTMLData">
            <summary>
            Returns the content of the first part that contains HTML data
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.Seen">
            <summary>
            Flag indicating in this message has been seen
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.Recent">
            <summary>
            Flag indicating if this is a recent message
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.Deleted">
            <summary>
            Flag indicating if this message is marked for deletion
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.Flagged">
            <summary>
            Flag indicating if this message is flagged... (that sounds rather redundant)
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.Answered">
            <summary>
            Flag indicating if this message has been answered
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.Draft">
            <summary>
            Flag indicating if this message is a draft
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.New">
            <summary>
            Flag indicating if this message is new (opposite logic of Seen)
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.HeaderLoaded">
            <summary>
            Flag indicating if the headers for this message have already been downloaded
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessage.ContentLoaded">
            <summary>
            Flag indicating if the content for this message has already been downloaded
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Objects.Message.#ctor(InterIMAP.Asynchronous.Client.IMAPAsyncClient,System.Int32)">
            <summary>
            Create a Message object with the specified ID
            </summary>
            <param name="id"></param>
            <param name="client"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Objects.Message.AssociateContacts(System.String,InterIMAP.Common.Interfaces.IContact[])">
            <summary>
            Associate a list of contacts with the specified contact property
            </summary>
            <param name="propName">"ToContacts", "FromContacts", "CcContacts", "BccContacts"</param>
            <param name="contacts">List of contacts</param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Objects.Message.CanAssociate(System.String,InterIMAP.Common.Interfaces.IContact)">
            <summary>
            Determines if the specified contact is already associated with the specified table for this message
            </summary>
            <param name="sourceTable"></param>
            <param name="contact"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Objects.Message.GetContacts(System.String)">
            <summary>
            Returns all the contacts associated with the specified property
            </summary>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Objects.Message.GetSourceTable(System.String)">
            <summary>
            Gets the name of the table that contacts of the specified property are stored in
            </summary>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Objects.Message.DecodeSubject(System.String)">
            <summary>
            =?utf-8?B?U2F2ZWQgc2VhcmNoIHJlc3VsdHMgLSA0LzUvMjAxMA==?=
            =?UTF-8?B?VG9waWMgcmVwbHkgbm90aWZpY2F0aW9uIC0gIkhhWGUvQUlSIHByb2plY3Qg?= =?UTF-8?B?dGVtcGxhdGUi?=
            =?ISO-8859-1?Q?JASON=2C_An_Exclusive_Financing_Offer_at_Best_Buy=AE?=
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPClient">
            <summary>
            Main class for the client wrapper
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.#ctor">
            <summary>
            Default constructor. Only used for deserialization purposes.
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.#ctor(InterIMAP.IMAPConfig,InterIMAP.IMAPLogger,System.Int32)">
            <summary>
            Main constructor. 
            </summary>
            <param name="config">The configuration instance to use for this client</param>
            <param name="logger">Custom logger to use with this client. Use null for default logger.</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.Logon">
            <summary>
            Login using currently specified connection settings. Called automatically if AutoLogon is true.
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.Logoff">
            <summary>
            Logoff from the server, if currently logged in
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.GetSingleFolder(System.String)">
            <summary>
            Returns a single folder that exactly maches the specified name
            </summary>
            <param name="name">The case-sensitive name of the folder to get</param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.GetFoldersByName(System.String,System.Boolean)">
            <summary>
            Iterates through the folder list and returns a list of matching folders. Can specify whether the name should match exactly or not.
            </summary>
            <param name="name">Name of folder to get</param>
            <param name="exact">Specify whether the name should match exactly</param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.UpdateCache(System.Boolean)">
            <summary>
            Serializes the current state of the object model to the cache file. 
            Should be called after modifying any messages or folders
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.SyncCache">
            <summary>
            Synchronizes the local cache with the server
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.FlattenFolderList(InterIMAP.Synchronous.IMAPFolderCollection)">
            <summary>
            Takes the multi-level folder structure and flattens it into a single list of all folders
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.FolderRecurser(InterIMAP.Synchronous.IMAPFolder,InterIMAP.Synchronous.IMAPFolderCollection@)">
            <summary>
            Helper method for recursively adding all folders from the source folder structure into the flat list
            </summary>
            <param name="currentFolder"></param>
            <param name="master"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.LoadCache">
            <summary>
            Loads the specified local cache into the object model
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.BuildNewCache">
            <summary>
            Retrieves all message data from the server and serializes it to the specified cache file. Used when a new cache file is specified.
            </summary>        
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.EmptyFolder(System.String)">
            <summary>
            This method will delete all the messages in the specified folder. Use with caution.
            </summary>
            <param name="folderName">The name of the folder to empty</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.CreateFolder(System.String)">
            <summary>
            Creates a new sub-folder under this folder
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.DeleteFolder(System.String)">
            <summary>
            Deletes a sub-folder under this folder. All messages contained in this folder will be deleted.
            </summary>
            <param name="name">Name of folder to delete</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.CountFolders(InterIMAP.Synchronous.IMAPFolder,System.Int32@)">
            <summary>
            Recursive helper method to count the total number of folders
            </summary>
            <param name="currentFolder"></param>
            <param name="count"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.CountMessages(InterIMAP.Synchronous.IMAPFolder,System.Int32@)">
            <summary>
            Recursive helper method to count the total number of messages in all folders
            </summary>
            <param name="currentFolder"></param>
            <param name="count"></param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.Log(InterIMAP.Synchronous.IMAPBase.LogTypeEnum,System.String)">
            <summary>
            Shortcut method for logging information to the Console and optionally, a log file.        
            </summary>
            <param name="type">Type of message</param>
            <param name="msg">the message to display</param>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPClient.FindFolder(System.String,InterIMAP.Synchronous.IMAPFolderCollection@,InterIMAP.Synchronous.IMAPFolder@)">
            <summary>
            Searches the entire tree structure of the provided folder collection looking for a folder with
            the specified path. if it finds the folder, it is stored in the foundFolder parameter
            </summary>
            <param name="path"></param>
            <param name="sourceList"></param>
            <param name="foundFolder"></param>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPClient.Logger">
            <summary>
            IMAPLogger instance to use for this client instance
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPClient.UpdatingCache">
            <summary>
            Internal flag to tell the system that the object model is currently being serialized.
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPClient.OfflineMode">
            <summary>
            Flag to indicate whether the client is currently running in offline mode
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPClient.UsingCache">
            <summary>
            Flag to indicate whether the client is using a local cache
            </summary>
            
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPClient.TotalMessages">
            <summary>
            Total number of messages found in all folders
            </summary>
            
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPClient.FolderCount">
            <summary>
            Total number of folders
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPClient.Config">
            <summary>
            The configuration object for this client instance
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPClient.LoggedOn">
            <summary>
            Returns true if the client is currently logged into the server
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPClient.Folders">
            <summary>
            Returns list of all folders underneath the default folder in the configuration class
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.CacheFormat">
            <summary>
            Available formats for data serialization
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.CacheFormat.XML">
            <summary>
            Serializes message data as human-readable XML
            </summary>
        </member>
        <member name="F:InterIMAP.Synchronous.CacheFormat.Binary">
            <summary>
            Serializes message data as machine-readable binary data
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Requests.AsyncBatchProgressCallback">
            <summary>
            
            </summary>
            <param name="percentComplete"></param>
        </member>
        <member name="T:InterIMAP.Common.Requests.AsyncBatchCompletedCallback">
            <summary>
            
            </summary>
            <param name="batch"></param>
        </member>
        <member name="T:InterIMAP.Common.Requests.AsyncBatchRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:InterIMAP.Common.BatchRequests.BaseBatchRequest">
            <summary>
            Common functionality for batch requests
            </summary>
        </member>
        <member name="T:InterIMAP.Common.BatchRequests.BaseBatchRequest.BatchRequestProgressCallback">
            <summary>
            Delegate signature for progress events
            </summary>
            <param name="req"></param>
        </member>
        <member name="M:InterIMAP.Common.Requests.AsyncBatchRequest.#ctor(System.Collections.Generic.ICollection{InterIMAP.Common.Interfaces.IRequest},InterIMAP.Common.Requests.AsyncBatchProgressCallback,InterIMAP.Common.Requests.AsyncBatchCompletedCallback)">
            <summary>
            
            </summary>
            <param name="requests"></param>
            <param name="progCallback"></param>
            <param name="completeCallback"></param>
        </member>
        <member name="T:InterIMAP.Common.Processors.LoginProcessor">
            <summary>
            Processes the result of the login command
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Processors.LoginProcessor.#ctor">
            <summary>
            Processes the result of the login command
            </summary>        
        </member>
        <member name="P:InterIMAP.Common.Processors.LoginProcessor.LoggedIn">
            <summary>
            Flag indicating if this connection is now logged in
            </summary>
        </member>
        <member name="T:InterIMAP.Common.MessageFlag">
            <summary>
            The standard message flags
            </summary>
        </member>
        <member name="F:InterIMAP.Common.MessageFlag.Seen">
            <summary>
            Indicates if this message has been read
            </summary>
        </member>
        <member name="F:InterIMAP.Common.MessageFlag.Deleted">
            <summary>
            Indicates if this message is marked for deletion
            </summary>
        </member>
        <member name="F:InterIMAP.Common.MessageFlag.Draft">
            <summary>
            Indicates if this message is a draft
            </summary>
        </member>
        <member name="F:InterIMAP.Common.MessageFlag.Answered">
            <summary>
            Indicates if this message has been replied to
            </summary>
        </member>
        <member name="F:InterIMAP.Common.MessageFlag.Flagged">
            <summary>
            Indicates if this message has been flaged
            </summary>
        </member>
        <member name="T:InterIMAP.Common.IMAPResponse">
            <summary>
            The type of response received from the server
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPResponse.IMAP_SUCCESS_RESPONSE">
            <summary>
            Imap Server responded "OK"
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPResponse.IMAP_FAILURE_RESPONSE">
            <summary>
            Imap Server responded "NO" or "BAD"
            </summary>
        </member>
        <member name="F:InterIMAP.Common.IMAPResponse.IMAP_IGNORE_RESPONSE">
            <summary>
            Imap Server responded "*"
            </summary>
        </member>
        <member name="T:InterIMAP.Asynchronous.Objects.Contact">
            <summary>
            Represents a single Contact in the mailbox
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Objects.Contact.#ctor(InterIMAP.Asynchronous.Client.IMAPAsyncClient,System.Int32)">
            <summary>
            Create a new Contact object with the specified ID
            </summary>
            <param name="id"></param>
            <param name="client"></param>
        </member>
        <member name="P:InterIMAP.Asynchronous.Objects.Contact.FirstName">
            <summary>
             The Contact's First Name
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Objects.Contact.LastName">
            <summary>
            The Contact's Last Name
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Objects.Contact.EMail">
            <summary>
            The Contact's E-Mail Address
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Objects.Contact.FullName">
            <summary>
            The full name of this contact
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Objects.Contact.ID">
            <summary>
            The Contact's ID
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Requests.SimpleBatchRequest">
            <summary>
            Basic implementation of the IBatchRequest interface
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Requests.SimpleBatchRequest.#ctor(System.Collections.Generic.IEnumerable{InterIMAP.Common.Interfaces.IRequest})">
            <summary>
            Create a new batch request specifing the array of requests to include
            </summary>
            <param name="reqs"></param>
        </member>
        <member name="M:InterIMAP.Common.Requests.SimpleBatchRequest.#ctor">
            <summary>
            Create an empty batch request
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Commands.LoginCommand">
            <summary>
            IMAP Command to Login to the server
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.LoginCommand.#ctor(System.String,System.String,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Generate a new LoginCommand
            </summary>
            <param name="username">The username of the account</param>
            <param name="password">The password of the account</param>
            <param name="callback"></param>
        </member>
        <member name="M:InterIMAP.Common.Commands.LoginCommand.ValidateParameters">
            <summary>
            Validates that the username parameter is not empty, password is allowed to be empty.
            </summary>
            <returns></returns>
        </member>
        <member name="T:InterIMAP.Common.Commands.ExamineFolderCommand">
            <summary>
            Command to set the specified folder as the current folder being Examined.
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.ExamineFolderCommand.#ctor(InterIMAP.Common.Interfaces.IFolder,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Create a new ExamineFolderCommand for the specified folder
            </summary>
            <param name="folder"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Asynchronous.Helpers.MessageLoggedCallback">
            <summary>
            Delegate signature of callback method used when a message is logged
            </summary>
            <param name="workerId"></param>
            <param name="msg"></param>
        </member>
        <member name="T:InterIMAP.Asynchronous.Helpers.WorkerLogger">
            <summary>
            Logs activity of the connection workers
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Helpers.WorkerLogger.#ctor(System.Int32)">
            <summary>
            Creates a WorkerLogger with the specified id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Helpers.WorkerLogger.Start">
            <summary>
            Opens the StreamWriter for use
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Helpers.WorkerLogger.Pause">
            <summary>
            Temporarily stop logging events
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Helpers.WorkerLogger.Stop">
            <summary>
            Close the logging Stream
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Helpers.WorkerLogger.Log(InterIMAP.Common.LogType,System.String,System.Object[])">
            <summary>
            Log an event
            </summary>
            <param name="type"></param>
            <param name="msg"></param>
            <param name="p"></param>
        </member>
        <member name="P:InterIMAP.Asynchronous.Helpers.WorkerLogger.Buffer">
            <summary>
            Collection of all messages that have been logged
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPMessageFlags">
            <summary>
            Storage class for the various flags a message can have
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPMessageFlags.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageFlags.Answered">
            <summary>
            Indicates if this message has been replyed to
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageFlags.Draft">
            <summary>
            Indicates if this message is a draft
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageFlags.Deleted">
            <summary>
            Indicates if this message has been marked for deletion during the next EXPUNGE
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageFlags.New">
            <summary>
            Indicates if this is a new (unread) message
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMessageFlags.Recent">
            <summary>
            Indicates if this message was received recently
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Requests.MessageStructureRequest">
            <summary>
            Retrieves structure of a message
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Requests.MessageStructureRequest.#ctor(InterIMAP.Common.Interfaces.IMessage,InterIMAP.Common.Requests.BaseRequest.RequestCompletedCallback)">
            <summary>
            Create a new message structure request
            </summary>
            <param name="msg"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Requests.ChangeFlagRequest">
            <summary>
            Request to update the flag of a message
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Requests.ChangeFlagRequest.#ctor(InterIMAP.Common.Interfaces.IMessage,InterIMAP.Common.MessageFlag,System.Boolean,InterIMAP.Common.Requests.BaseRequest.RequestCompletedCallback)">
            <summary>
            Create new changeflag request
            </summary>
            <param name="msg"></param>
            <param name="flag"></param>
            <param name="value"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Asynchronous.Objects.MessageContent">
            <summary>
            An individual section of content for a message
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Interfaces.IMessageContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.ContentDescription">
            <summary>
            ContentDescription field
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.MIMEVersion">
            <summary>
            MIMEVersion field
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.ContentFilename">
            <summary>
            Filename if this section is an attachment
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.ContentDisposition">
            <summary>
            ContentDisposition field
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.ContentId">
            <summary>
            ContentId field
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.PartID">
            <summary>
            The Part of the message body this is
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.TextData">
            <summary>
            Usually represents the plain text content of a message
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.BinaryData">
            <summary>
            Contains the binary data of an attachment
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.ContentType">
            <summary>
            The type of content
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.ContentTransferEncoding">
            <summary>
            The encoding used for this content part
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.ContentSize">
            <summary>
            The size of the content
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.Lines">
            <summary>
            Number of lines (applies to TextData mainly)
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.MessageID">
            <summary>
            The message this part belongs to
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.MD5">
            <summary>
            The MD5 field
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.Language">
            <summary>
            The Language field
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.Charset">
            <summary>
            The charset field
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.Message">
            <summary>
            A reference to the message object
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.HTMLData">
            <summary>
            The HTML data of this message
            </summary>
        </member>
        <member name="P:InterIMAP.Common.Interfaces.IMessageContent.IsAttachment">
            <summary>
            Flag indicating if this part is an attachment
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Objects.MessageContent.#ctor(InterIMAP.Asynchronous.Client.IMAPAsyncClient,System.Int32)">
            <summary>
            Create a new content object. The ID must already exist in the content table
            </summary>
            <param name="client"></param>
            <param name="contentID"></param>
        </member>
        <member name="T:InterIMAP.Asynchronous.Helpers.LoggerAggregator">
            <summary>
            A system that collects all the log information for each active worker
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Helpers.LoggerAggregator.#ctor">
            <summary>
            Create a new aggregator for the specified client
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Helpers.LoggerAggregator.AddMessage(System.Int32,System.String)">
            <summary>
            Add a new message
            </summary>
            <param name="worker"></param>
            <param name="message"></param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Helpers.LoggerAggregator.GetWorkerMessages(System.Int32)">
            <summary>
            Get all the messages for the specified worker
            </summary>
            <param name="workerid"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Helpers.LoggerAggregator.ClearLogs">
            <summary>
            Purge the aggregator of all logs
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Helpers.LoggerAggregator.Logs">
            <summary>
            Raw data table where log information is stored
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Helpers.LoggerAggregator.LogEntries">
            <summary>
            Array of log messages currently stored
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPMailAddress">
            <summary>
            Simple container to store the address and display name of contacts used in a message
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPMailAddress.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:InterIMAP.Synchronous.IMAPMailAddress.#ctor(System.String,System.String)">
            <summary>
            Construct a new IMAPMailAddress object specifying the display name and address
            </summary>
            <param name="display"></param>
            <param name="addr"></param>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMailAddress.DisplayName">
            <summary>
            The proper name of the owner of the e-mail address
            </summary>
        </member>
        <member name="P:InterIMAP.Synchronous.IMAPMailAddress.Address">
            <summary>
            The e-mail address
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Requests.FullMessageCompleteCallback">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="totalTime"></param>
        </member>
        <member name="T:InterIMAP.Common.Requests.FullMessageProgressCallback">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="bytesReceived"></param>
            <param name="totalBytes"></param>
        </member>
        <member name="T:InterIMAP.Common.Requests.FullMessageRequest">
            <summary>
            Asynchronously retrieve all parts of a message
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Requests.FullMessageRequest.#ctor(InterIMAP.Asynchronous.Client.IMAPAsyncClient,InterIMAP.Common.Interfaces.IMessage)">
            <summary>
            Create new full message request
            </summary>
            <param name="client"></param>
            <param name="msg"></param>
        </member>
        <member name="M:InterIMAP.Common.Requests.FullMessageRequest.Start">
            <summary>
            Begin retreiving the message
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Data.ZipStorer">
            <summary>
            Static class for managing the physical mailbox file
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Data.ZipStorer.Create(System.String,System.String)">
            <summary>
            Creates a new storage file
            </summary>
            <param name="_filename"></param>
            <param name="_comment"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Common.Data.ZipStorer.Open(System.String,System.IO.FileAccess)">
            <summary>
            Open an existing storage file
            </summary>
            <param name="_filename"></param>
            <param name="_access"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Common.Data.ZipStorer.AddFile(System.String,System.String,System.String)">
            <summary>
            Add a file to the currently open storage file
            </summary>
            <param name="_pathname"></param>
            <param name="_filenameInZip"></param>
            <param name="_comment"></param>
        </member>
        <member name="M:InterIMAP.Common.Data.ZipStorer.AddStream(System.String,System.IO.Stream,System.DateTime,System.String)">
            <summary>
            Add a file, based on a stream, to the currently open storage file
            </summary>
            <param name="_filenameInZip"></param>
            <param name="_source"></param>
            <param name="_modTime"></param>
            <param name="_comment"></param>
        </member>
        <member name="M:InterIMAP.Common.Data.ZipStorer.Close">
            <summary>
            Close the storage file
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Data.ZipStorer.ReadCentralDir">
            <summary>
            Read all of the file records
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Common.Data.ZipStorer.GetFileOffset(System.UInt32)">
            <summary>
            Calculate the file offset
            </summary>
            <param name="_headerOffset"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Common.Data.ZipStorer.ExtractStoredFile(InterIMAP.Common.Data.ZipStorer.ZipFileEntry,System.String)">
            <summary>
            Extract a stored file
            </summary>
            <param name="_zfe"></param>
            <param name="_filename"></param>
        </member>
        <member name="T:InterIMAP.Common.Data.ZipStorer.ZipFileEntry">
            <summary>
            Represents a single file entry
            </summary>
        </member>
        <member name="T:InterIMAP.Synchronous.IMAPMessageCollection">
            <summary>
            IMAPMessage Collection class to add a special accessor to get a message by UID
            </summary>
        </member>
        <member name="T:InterIMAP.IMAPException">
            <summary>
            IMAP Exception class which implements IMAP releted exceptions
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.message">
            <summary>
            Exception message string
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.errorType">
            <summary>
            Error Type: ImapErrorEnum
            </summary>
        </member>
        <member name="M:InterIMAP.IMAPException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">string</param>
        </member>
        <member name="M:InterIMAP.IMAPException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">string</param>
            <param name="inner">Exception</param>
        </member>
        <member name="M:InterIMAP.IMAPException.#ctor(InterIMAP.IMAPException.IMAPErrorEnum)">
            <summary>
            Constructor
            </summary>
            <param name="Type">ImapErrorEnum</param>
        </member>
        <member name="M:InterIMAP.IMAPException.#ctor(InterIMAP.IMAPException.IMAPErrorEnum,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="Type">ImapErrorEnum</param>
            <param name="error">string</param>
        </member>
        <member name="M:InterIMAP.IMAPException.GetDescription(InterIMAP.IMAPException.IMAPErrorEnum)">
            <summary>
            Get Description for specified type
            </summary>
            <param name="type">ImapErrorEnum type</param>
            <returns>string</returns>
        </member>
        <member name="P:InterIMAP.IMAPException.Type">
            <summary>
            Property : Type (ImapErrorEnum)
            </summary>
        </member>
        <member name="T:InterIMAP.IMAPException.IMAPErrorEnum">
            <summary>
            enum for Imap exception errors
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_URI">
            <summary>
            failure parsing the url
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_MESSAGEUID">
            <summary>
            invalid message uid in the url
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_AUTHFAILED">
            <summary>
            invalid username/password in the url
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_CONNECT">
            <summary>
            failure connecting to imap server
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_NOTCONNECTED">
            <summary>
            not connected to any IMAP
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_LOGIN">
            <summary>
            failure logging into imap server
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_LOGOUT">
            <summary>
            failure to logout from imap server
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_INSUFFICIENT_DATA">
            <summary>
            not enough data to restore
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_TIMEOUT">
            <summary>
            timeout while waiting for response
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_SOCKET">
            <summary>
            socket error while receiving
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_QUOTA">
            <summary>
            failure getting the quota information
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_SELECT">
            <summary>
            failure selecting a IMAP folder
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_EXAMINE">
            <summary>
            failure examining an IMAP folder
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_NOTSELECTED">
            <summary>
             No folder is currently selected
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_SEARCH">
            <summary>
            failure to search
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_SEARCH_EXACT">
            <summary>
            failed to do exact match after search
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_INVALIDSEARCHKEY">
            <summary>
            unsupported search key
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_GETMIME">
            <summary>
            failure to get message MIME
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_INVALIDHEADER">
            <summary>
            Message Header is in invalid format
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_FETCHBODYSTRUCT">
            <summary>
            Failed to fetch the bodystructure
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_FETCHMSG">
            <summary>
            failure to fetch a IMAP message
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_MEMALLOC">
            <summary>
            failure to allocate memory
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_ENCODINGERROR">
            <summary>
            failure to encode the audio content
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_FILEIO">
            <summary>
            failure to read/write the audio content
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_STOREMSG">
            <summary>
            failure to store the message in IMAP
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_EXPUNGE">
            <summary>
            failure to issue expunge command
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_INVALIDPARAM">
            <summary>
            invalid parameter to API
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_CAPABILITY">
            <summary>
            Capability command error
            </summary>
        </member>
        <member name="F:InterIMAP.IMAPException.IMAPErrorEnum.IMAP_ERR_SERIOUS">
            <summary>
            Serious Problem
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Requests.MessageListRequest">
            <summary>
            Retreives the list of message UIDs for the specified folder from the server.
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Requests.MessageListRequest.#ctor(InterIMAP.Common.Interfaces.IFolder,InterIMAP.Common.Requests.BaseRequest.RequestCompletedCallback)">
            <summary>
            Retreives the list of message UIDs for the specified folder from the server.
            </summary>
            <param name="folder"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Common.Processors.ChangeFlagProcessor">
            <summary>
            Processes the result of a change flag command
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Commands.MessageListCommand">
            <summary>
            Command to retrieve list of message UIDs in the specified folder
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.MessageListCommand.#ctor(InterIMAP.Common.Interfaces.IFolder,InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Create a new MessageListCommand for the specified folder
            </summary>
            <param name="folder"></param>
            <param name="callback"></param>
        </member>
        <member name="T:InterIMAP.Asynchronous.Client.IMAPConnection">
            <summary>
            Provides all of the necessary plumbing to interact with an IMAP server
            </summary>
        </member>
        <member name="F:InterIMAP.Asynchronous.Client.IMAPConnection.IMAP_DEFAULT_PORT">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="F:InterIMAP.Asynchronous.Client.IMAPConnection.IMAP_DEFAULT_SSL_PORT">
            <summary>
            IMAP Command constant
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnection.#ctor(InterIMAP.IMAPConfig,InterIMAP.Asynchronous.Helpers.WorkerLogger)">
            <summary>
            Create new IMAPConnection object specifying the IMAPConfig to use
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnection.Log(InterIMAP.Common.LogType,System.String)">
            <summary>
            Logging function
            </summary>
            <param name="type">Log type;LogTypeEnum</param>
            <param name="log">Log data</param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnection.ValidateServerCertificate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Callback for RemoteCertificateValidation object. Use for SSL connections.
            </summary>
            <param name="sender"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="sslPolicyErrors"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnection.ExecuteCommand(InterIMAP.Common.Interfaces.ICommand)">
            <summary>
            Executes the specified command on this connection
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnection.ReadLine">
            <summary>
            Reads a single line of text from either the SSL or Standard connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnection.SendRaw(System.String,System.Boolean)">
            <summary>
            Sends a raw string to the server, optionally in the format of a command
            </summary>
            <param name="data">The string to send to the server</param>
            <param name="asCommand">True to treat this string as a command</param>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnection.Connect">
            <summary>
            Establish a connection to the IMAP Server. Calls Capability() on success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnection.Disconnect">
            <summary>
            Close this connection to the server
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnection.Logger">
            <summary>
            The logging object to use
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnection.ServerHost">
            <summary>
            The server hostname to connect to
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnection.ServerPort">
            <summary>
            The port the server should connect to
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnection.Username">
            <summary>
            The Username of the account
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnection.Password">
            <summary>
            The Password of the account
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnection.IsConnected">
            <summary>
            Flag indicating whether this connection is active
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnection.UseSSL">
            <summary>
            Flag to indicate that this connection should use SSL
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnection.Config">
            <summary>
            The IMAPConfig object to use for this connection
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Requests.NewMessagesRequest">
            <summary>
            Checks every folder for new messages
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Requests.NewMessagesRequest.#ctor(InterIMAP.Asynchronous.Client.IMAPAsyncClient)">
            <summary>
            Create a new NewMessageRequest
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:InterIMAP.Common.Requests.NewMessagesRequest.Start(InterIMAP.Common.Interfaces.IFolder)">
            <summary>
            Search for new messages within the specified folder
            </summary>
            <param name="folder"></param>
        </member>
        <member name="M:InterIMAP.Common.Requests.NewMessagesRequest.Start(InterIMAP.Common.Interfaces.IFolder[])">
            <summary>
            Search for messages within the specified folders. The NewMessageRequestCompleted event will be fired once for each folder.
            </summary>
            <param name="folders"></param>
        </member>
        <member name="M:InterIMAP.Common.Requests.NewMessagesRequest.Start">
            <summary>
            Starts the search for new messages
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Attributes.HeaderName">
            <summary>
            Specifies the header field inside the message header that corresponds to the attached property
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Attributes.HeaderName.#ctor(System.String)">
            <summary>
            Attach this property to the specified header field
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:InterIMAP.Common.Attributes.HeaderName.Name">
            <summary>
            Name of the header field this property is attached to
            </summary>
        </member>
        <member name="T:InterIMAP.Asynchronous.Client.IMAPConnectionWorker">
            <summary>
            Thread object responsible for executing a request
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnectionWorker.#ctor(InterIMAP.Asynchronous.Client.IMAPAsyncClient,System.Int32)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnectionWorker.Start">
            <summary>
            Start this worker
            </summary>
        </member>
        <member name="M:InterIMAP.Asynchronous.Client.IMAPConnectionWorker.Stop">
            <summary>
            Stops this worker
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnectionWorker.Connection">
            <summary>
            The IMAPConnection object this worker will use
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnectionWorker.Config">
            <summary>
            The IMAPConfig this worker will use
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnectionWorker.WorkerID">
            <summary>
            The ID of this worker thread
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnectionWorker.IsAlive">
            <summary>
            Flag indicating if this worker is connected
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnectionWorker.Failed">
            <summary>
            Flag indicating if this worker failed to connect
            </summary>
        </member>
        <member name="P:InterIMAP.Asynchronous.Client.IMAPConnectionWorker.Logger">
            <summary>
            The WorkerLogger instance used by this worker
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Processors.MessageStructureProcessor">
            <summary>
            Processes the result of the MessageStructure command
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Processors.FolderDataProcessor">
            <summary>
            Processes the results of the FolderData command
            </summary>
        </member>
        <member name="T:InterIMAP.Common.MailboxType">
            <summary>
            The type of mailbox currently being used
            </summary>
        </member>
        <member name="F:InterIMAP.Common.MailboxType.Virtual">
            <summary>
            A Mailbox with no persistent storage
            </summary>
        </member>
        <member name="F:InterIMAP.Common.MailboxType.Physical">
            <summary>
            A Mailbox using a MBX file to persist message data
            </summary>
        </member>
        <member name="T:InterIMAP.Common.Commands.CapabilityCommand">
            <summary>
            Sends the Capability command to the server
            </summary>
        </member>
        <member name="M:InterIMAP.Common.Commands.CapabilityCommand.#ctor(InterIMAP.Common.Commands.BaseCommand.CommandDataReceivedCallback)">
            <summary>
            Create new Capability command
            </summary>
        </member>
    </members>
</doc>
